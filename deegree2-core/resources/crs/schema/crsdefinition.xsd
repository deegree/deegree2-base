<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:crs="http://www.deegree.org/crs" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.deegree.org/crs" elementFormDefault="qualified">
	<xs:element name="definitions">
		<xs:annotation>
			<xs:documentation>
        The root node of the deegree crs-definitions-xml file. The definitions node must at least contain one ellipsoid
        a datum element and a crs.
      </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element name="ellipsoid" type="crs:EllipsoidType"
					maxOccurs="unbounded" />
				<xs:element name="geodeticDatum"
					type="crs:GeodeticDatumType" maxOccurs="unbounded" />
				<xs:choice maxOccurs="unbounded">
					<xs:element name="projectedCRS"
						type="crs:ProjectedCRSType" />
					<xs:element name="geographicCRS"
						type="crs:GeographicCRSType" />
					<xs:element name="compoundCRS"
						type="crs:CompoundCRSType" />
					<xs:element name="geocentricCRS"
						type="crs:GeocentricCRSType" />
				</xs:choice>
				<xs:element name="primeMeridian"
					type="crs:PrimeMeridianType" minOccurs="0" maxOccurs="unbounded" />
				<xs:element name="wgs84Transformation"
					type="crs:WGS84TransformationType" minOccurs="0"
					maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="version" fixed="0.1.0"/>			
		</xs:complexType>
	</xs:element>
	<!-- ######################
    # Compontent defintions #
    ######################### -->
	<xs:element name="axisOrder">
		<xs:annotation>
			<xs:documentation>
        A comma separated list of axis names (defined with an crs:Axis) which will define the axis Order of incoming
        points.
      </xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:list itemType="xs:string"/>
		</xs:simpleType>
	</xs:element>
	<xs:element name="axisOrientation">
		<xs:annotation>
			<xs:documentation>A simple element defining the possible axis' orientation</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="north"/>
				<xs:enumeration value="south"/>
				<xs:enumeration value="west"/>
				<xs:enumeration value="east"/>
				<xs:enumeration value="front"/>
				<xs:enumeration value="back"/>
				<xs:enumeration value="up"/>
				<xs:enumeration value="down"/>
				<xs:enumeration value="other"/>
				<xs:enumeration value="perpendicular"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="units">
		<xs:annotation>
			<xs:documentation>The units currently supported by the deegree-crs-library.</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="metre"/>
				<xs:enumeration value="degree"/>
				<xs:enumeration value="britishyard"/>
				<xs:enumeration value="usfoot"/>
				<xs:enumeration value="arcsec"/>
				<xs:enumeration value="unknown"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:complexType name="_Identifiable" abstract="true">
		<xs:annotation>
			<xs:documentation>
        The ellipsoids, datums, wgs84Transformations, projections and crs's must have at least one identifier and may
        have more descriptive values.
      </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="id" type="xs:string" maxOccurs="unbounded"/>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element name="name" type="xs:string"/>
				<xs:element name="version" type="xs:string"/>
				<xs:element name="description" type="xs:string"/>
				<xs:element name="areaOfUse" type="xs:string"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AxisType">
		<xs:annotation>
			<xs:documentation>The definition of an Axis in the deegree-crs-library.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element ref="crs:units"/>
			<xs:element ref="crs:axisOrientation"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PrimeMeridianType">
		<xs:annotation>
			<xs:documentation>The definition of a prime meridian, with longitude (in units) from greenwich.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:_Identifiable">
				<xs:sequence>
					<xs:element ref="crs:units"/>
					<xs:element name="longitude" type="crs:LatLongType"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GeodeticDatumType">
		<xs:annotation>
			<xs:documentation>
        The definition of a Datum in the deegree-crs-library. The usedEllipsoid is a reference to the id of an ellipsoid
        defined in the crs-configuration. Same is true for the usedPrimeMeridian, if this is omitted the greenwich
        meridian is used. If no conversionInfo (also a link to an existing object) is given, it is assumed that the
        datum needs no conversion into wgs84 (e.g. the ESR:89 datum).
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:_Identifiable">
				<xs:sequence>
					<xs:element name="usedEllipsoid" type="xs:string"/>
					<xs:element name="usedPrimeMeridian" type="xs:string" minOccurs="0"/>
					<xs:element name="usedWGS84ConversionInfo" type="xs:string" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="EllipsoidType">
		<xs:annotation>
			<xs:documentation>The definition of an ellipsoid in deegree-crs-library.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:_Identifiable">
				<xs:sequence>
					<xs:element name="semiMajorAxis" type="xs:double"/>
					<xs:choice>
						<xs:element name="eccentricity" type="xs:double"/>
						<xs:element name="inverseFlattening" type="xs:double"/>
						<xs:element name="semiMinorAxis" type="xs:double"/>
					</xs:choice>
					<xs:element ref="crs:units"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!-- ##########################
    # Transformations definitions #
    ###############################-->
	<xs:complexType name="WGS84TransformationType">
		<xs:annotation>
			<xs:documentation>
        A Transformation defines the parameters necessary to transform a specific datum into the wgs-84 datum.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:_Identifiable">
				<xs:sequence>
					<xs:element name="xAxisTranslation" type="xs:double"/>
					<xs:element name="yAxisTranslation" type="xs:double"/>
					<xs:element name="zAxisTranslation" type="xs:double"/>
					<xs:element name="xAxisRotation" type="xs:double"/>
					<xs:element name="yAxisRotation" type="xs:double"/>
					<xs:element name="zAxisRotation" type="xs:double"/>
					<xs:element name="scaleDifference" type="xs:double"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="PolynomialTransformationBaseType">
		<xs:annotation>
			<xs:documentation>
        The base type of all transformations defines standard elements used in all transformations.
      </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="polynomialOrder" type="xs:double" minOccurs="0"/>
			<xs:element name="xParameters" type="crs:polynomialParameters"/>
			<xs:element name="yParameters" type="crs:polynomialParameters"/>
			<xs:element name="targetCRS" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LeastSquareTransformationType">
		<xs:annotation>
			<xs:documentation>
        The least square type defines scale x and scale y values.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:PolynomialTransformationBaseType">
				<xs:sequence>
					<xs:element name="scaleX" type="xs:double" minOccurs="0"/>
					<xs:element name="scaleY" type="xs:double" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:group name="definedPolynomialTransformations">
		<xs:choice>
			<xs:element name="leastsquare" type="crs:LeastSquareTransformationType"/>
		</xs:choice>
	</xs:group>
	<xs:simpleType name="polynomialParameters">
		<xs:annotation>
			<xs:documentation>
        A simple list of doubles
      </xs:documentation>
		</xs:annotation>
		<xs:list itemType="xs:double"/>
	</xs:simpleType>
	<!-- #######################
    # PROJECTIONS definitions#
    ##########################-->
	<xs:group name="definedProjections">
		<xs:choice>
			<xs:element name="lambertAzimuthalEqualArea" type="crs:ProjectionBaseType"/>
			<xs:element name="lambertConformalConic" type="crs:LambertConformalConicType"/>
			<xs:element name="stereographicAzimuthal" type="crs:StereographicAzimuthalType"/>
			<xs:element name="stereographicAlternative" type="crs:ProjectionBaseType"/>
			<xs:element name="transverseMercator" type="crs:TransverseMercatorType"/>
			<xs:element name="mercator" type="crs:ProjectionBaseType"/>
		</xs:choice>
	</xs:group>
	<xs:complexType name="LatLongType">
		<xs:annotation>
			<xs:documentation>
        A simple type, which can be used to define a lat-lon in radians or degrees. False if the given
        latitude/longitude is in radians. If omited degrees will be assumed.
      </xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:double">
				<xs:attribute name="inDegrees" type="xs:boolean" use="optional"/>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	<xs:complexType name="ProjectionBaseType">
		<xs:annotation>
			<xs:documentation>
        The base type of all projections defines standard elements used in all projection.
      </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="latitudeOfNaturalOrigin" type="crs:LatLongType" minOccurs="0"/>
			<xs:element name="longitudeOfNaturalOrigin" type="crs:LatLongType" minOccurs="0"/>
			<xs:element name="scaleFactor" type="xs:double" minOccurs="0"/>
			<xs:element name="falseEasting" type="xs:double" minOccurs="0"/>
			<xs:element name="falseNorthing" type="xs:double" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="class" type="xs:string" use="optional"/>
	</xs:complexType>
	<xs:complexType name="TransverseMercatorType">
		<xs:annotation>
			<xs:documentation>
        A transverse mercator projection only needs the supplement information of the norther/southern hemisphere, if
        failing northern hemisphere is assumed.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:ProjectionBaseType">
				<xs:sequence>
					<xs:element name="northernHemisphere" type="xs:boolean" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="StereographicAzimuthalType">
		<xs:annotation>
			<xs:documentation>
        A Stereographic Azimuthal projection only needs the supplement information of the true scale latitude, which
        defines the latitude (in radians) around the projection point for which the projection has a true scale. If
        failing the projection latitude is assumed.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:ProjectionBaseType">
				<xs:sequence>
					<xs:element name="trueScaleLatitude" type="crs:LatLongType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="LambertConformalConicType">
		<xs:annotation>
			<xs:documentation>
        A Lambert Conformal Conic projection needs the supplement information (like all conic projections) of the first
        and/or second projection parallels, e.g. the parallels which intersect with the datum. If failing the projection
        latitude will be assumed.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:ProjectionBaseType">
				<xs:sequence>
					<xs:element name="firstParallelLatitude" type="crs:LatLongType" minOccurs="0"/>
					<xs:element name="secondParallelLatitude" type="crs:LatLongType" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<!--  #############################
    # Coordinate system definitions # 
    ################################# -->
	<xs:complexType name="AbstractCRS" abstract="true">
		<xs:annotation>
			<xs:documentation>
        The base type of all crs's defines an extra element to define the axis-order of the implementing crs. Deegree
        supports up to 3 axis.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:_Identifiable">
				<xs:sequence>
					<xs:choice maxOccurs="3">
						<xs:element name="Axis" type="crs:AxisType"/>
					</xs:choice>
					<xs:element ref="crs:axisOrder"/>
					<xs:element name="polynomialTransformation" minOccurs="0">
						<xs:complexType>
							<xs:group ref="crs:definedPolynomialTransformations"/>
							<xs:attribute name="class" type="xs:string" use="optional"/>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GeographicCRSType">
		<xs:annotation>
			<xs:documentation>
        A geographic crs is defined on a datum. The value should be a valid id of an element in the configuration.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:AbstractCRS">
				<xs:sequence>
					<xs:element name="usedDatum" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="CompoundCRSType">
		<xs:annotation>
			<xs:documentation>
        A compound crs is defined on a crs with a vertical Axis defining the height above or below the ellipsoid. The
        default height, denotes a height value if no z coordinate is given.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:_Identifiable">
				<xs:sequence>
					<xs:element name="usedCRS" type="xs:string"/>
					<xs:element name="heightAxis" type="crs:AxisType"/>
					<xs:element name="defaultHeight" type="xs:double" default="0" minOccurs="0"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="GeocentricCRSType">
		<xs:annotation>
			<xs:documentation>
        A geocentricCRS is a coordinate system which is defined with it's center at the earths mass.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:AbstractCRS">
				<xs:sequence>
					<xs:element name="usedGeodeticDatum" type="xs:string"/>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ProjectedCRSType">
		<xs:annotation>
			<xs:documentation>
        A projectedCRS is a coordinatesystem which uses a projection as well as a geographicCRS. Both should be
        references to an id defined in the deegree-crs-configuration.
      </xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="crs:AbstractCRS">
				<xs:sequence>
					<xs:element name="usedGeographicCRS" type="xs:string"/>
					<!--xs:element name="usedProjection" type="xs:string"/-->
					<xs:element name="projection">
						<xs:complexType>
							<xs:group ref="crs:definedProjections"/>
							<xs:attribute name="class" use="optional"/>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
